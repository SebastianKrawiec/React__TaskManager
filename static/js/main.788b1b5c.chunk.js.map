{"version":3,"sources":["contexts/formContext.jsx","components/layout/header/form/AddForm.jsx","components/layout/header/Header.jsx","components/layout/container/task/Task.jsx","components/layout/container/Container.jsx","App.js","index.js"],"names":["FormContext","createContext","FormContextProvider","children","useState","activeForm","setActiveform","id","task","date","reminder","tasks","setTasks","Provider","value","addNewTask","newTask","Math","floor","random","setedNewTask","handleForm","handleDelete","filter","handleReminder","map","AddForm","useContext","setTask","setDate","setReminder","className","onSubmit","e","preventDefault","alert","type","onChange","target","checked","defaultChecked","Header","onClick","Task","onDoubleClick","Container","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.788b1b5c.chunk.js","sourcesContent":["import React, {createContext,useState} from \"react\";\r\n\r\nexport const FormContext = createContext();\r\n\r\nconst FormContextProvider = ({ children }) => {\r\n\r\n\r\n    const [activeForm, setActiveform] = useState(false);\r\n    const [tasks, setTasks] = useState([\r\n        {id:0, task: \"cleaning the house\", date: \"mon 25th 12 AM\", reminder:true },\r\n        {id:1, task: \"learn react\", date: \"san 1th 9 AM\", reminder:false },\r\n        {id:2, task: \"try hooks\", date: \"twe 15th 1 PM\", reminder:true },\r\n        {id:3, task: \"creating task app\", date: \"wen 19th 3 PM\", reminder:false },\r\n    ]);\r\n\r\n    const addNewTask = (newTask) =>{\r\n        const id = Math.floor(Math.random() * 10000) + 1\r\n        const setedNewTask = { id , ...newTask}\r\n        setTasks([...tasks, setedNewTask])\r\n        /* console.log(setedNewTask) */\r\n    }\r\n\r\n\r\n    const handleForm = () => {\r\n        setActiveform(!activeForm)\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        setTasks(tasks.filter( task => task.id !== id ));\r\n      }\r\n    \r\n      const handleReminder = (id) => {\r\n        setTasks(\r\n          tasks.map( task => task.id === id ? {...task, reminder: !task.reminder } : task)\r\n        )\r\n      }\r\n\r\n    return ( \r\n\r\n        <FormContext.Provider value={\r\n            {addNewTask, tasks,handleForm,activeForm, handleDelete, handleReminder}\r\n        }>\r\n            {children}\r\n        </FormContext.Provider>\r\n\r\n    )\r\n}\r\n\r\nexport default FormContextProvider;","import React, {useContext,useState} from 'react';\r\nimport \"./addForm.css\";\r\nimport {FormContext} from \"../../../../contexts/formContext\"\r\n\r\nconst AddForm = () => {\r\n\r\n\r\nconst {activeForm,addNewTask} = useContext(FormContext);\r\n\r\nconst [task,setTask] = useState(\"\");\r\nconst [date,setDate] = useState(\"\");\r\nconst [reminder,setReminder] = useState(false);\r\n\r\nconst addTask = (e) => {\r\n    e.preventDefault();\r\n    if(!task){\r\n        alert(\"please add a new task\")\r\n        return\r\n    }\r\n\r\n    addNewTask({task,date, reminder})\r\n\r\n    setTask(\"\");\r\n    setDate(\"\");\r\n    setReminder(false);\r\n\r\n}\r\n\r\n    return (\r\n        <form className={`form ${activeForm && \"active\"}`} onSubmit={addTask}>\r\n            <label className=\"form__label\">\r\n                Task\r\n                <input className=\"form__input\" type=\"text\" value={task} onChange={(e) => setTask(e.target.value)} />\r\n            </label>\r\n            <label className=\"form__label\" >\r\n                Date\r\n                <input className=\"form__input\" type=\"text\" value={date} onChange={(e) => setDate(e.target.value)}/>\r\n            </label>\r\n            <label className=\"form__label form__label--checkbox\" value={reminder} onChange={(e) => setReminder(e.target.checked)}>\r\n                reminder\r\n                <input className=\"form__input\" type=\"checkbox\" defaultChecked={reminder} value=\"false\" />\r\n            </label>\r\n            <input className=\"btn--submit\" type=\"submit\" value=\"Add new task\" />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddForm;\r\n","import React,{useContext} from 'react';\r\nimport \"./header.css\";\r\nimport AddForm from \"./form/AddForm\";\r\nimport {FormContext} from \"../../../contexts/formContext\";\r\n\r\n\r\nconst Header = () => {\r\n\r\nconst {handleForm,activeForm} = useContext(FormContext);\r\n\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header-container\">\r\n                <h1 className=\"header-title\">task tracker</h1>\r\n                <button className={`header-btn ${activeForm ? \"btn--alert\" : \" \"}`} onClick={handleForm}>\r\n                    { activeForm ? \"close\" : \"add\"}\r\n                </button>\r\n            </div>\r\n            <AddForm />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n /* <input className=\"input-header\" type=\"text\" name=\"task\" placeholder=\"write a task\" onChange={trackTask}/>\r\n                <input className=\"input-header\" type=\"text\" name=\"date\" placeholder=\"write the date of it\"  onChange={trackTask}/> */","import React, {useContext} from 'react';\r\nimport \"./task.css\";\r\nimport {FormContext} from \"../../../../contexts/formContext\";\r\n\r\n\r\nconst Task = ({task}) => {\r\n\r\n    const {handleDelete,handleReminder} = useContext(FormContext)\r\n    \r\n\r\n    return (\r\n        <li className={`task-item ${task.reminder ? \"task-item__active\" : \" \"}`} onDoubleClick={() => {handleReminder(task.id)}}>\r\n            <div className=\"task-container\">\r\n                <h2 className=\"task-item__title\">{task.task}</h2>\r\n                <p className=\"task-item__text\">{task.date}</p>\r\n            </div>\r\n            <button className=\"task-btn\" onClick={() => handleDelete(task.id)}>delete</button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Task;\r\n","import React,{ useContext} from 'react';\r\nimport \"./container.css\";\r\nimport Task from \"./task/Task\";\r\nimport {FormContext} from \"../../../contexts/formContext\";\r\n\r\n\r\n\r\nconst Container = () => {\r\n\r\n  const {tasks} = useContext(FormContext);\r\n\r\n  /*  const [tasks,setTasks] = useState([\r\n    {id:0, task: \"cleaning the house\", date: \"mon 25th 12 AM\", reminder:false },\r\n    {id:1, task: \"learn react\", date: \"san 1th 9 AM\", reminder:false },\r\n    {id:2, task: \"try hooks\", date: \"twe 15th 1 PM\", reminder:true },\r\n    {id:3, task: \"creating task app\", date: \"wen 19th 3 PM\", reminder:false },\r\n   ]); */\r\n\r\n\r\n    return (\r\n        <ul className=\"task-list\">\r\n          {\r\n            tasks.length > 0 ? (\r\n              tasks.map( (task) => <Task key={task.id} task={task} /> )\r\n            ) : (\r\n              <p className=\"task-item__title task-item__title--empty\">there's no more tasks</p>\r\n            )\r\n            \r\n          }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Container;","import Header from \"./components/layout/header/Header.jsx\";\nimport Container from \"./components/layout/container/Container.jsx\";\nimport FormContextProvider from \"./contexts/formContext\"\nimport \"./app.css\";\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <FormContextProvider>\n          <Header />\n          <Container />\n        </FormContextProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}